syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.loopring.lightcone.proto";
package com.loopring.lightcone.proto;

import "ring.proto";
import "order.proto";
import "eth_jsonrpc.proto";

enum TxStatus {
    TX_STATUS_UNKNOWN = 0;
    TX_STATUS_PENDING = 1;
    TX_STATUS_SUCCESS = 2;
    TX_STATUS_FAILED = 3;
    TX_STATUS_DISMISS = 4;  // 该状态不一定有用
}

message FullTransaction {
    Transaction tx = 1;
    TraceTransaction trace= 2;
    TransactionReceipt receipt = 3;
    // todo block
}

message TxHeader {
    string tx_hash  = 1;
    int32 tx_index = 2;
    int32 log_index = 3;
    string block_number = 4;
    string block_hash = 5;
    string gas_price = 6;
    string gas_used = 7;
    string gas_limit = 8;
    string nonce = 9;
    string from = 10;
    string to = 11;
    string value = 12;
    TxStatus status = 13;
    bool is_internal = 14;
    bool is_log = 15;
}

message AddressBalanceChanged {
    string token = 1;
    string owner = 2;
    string value = 3;
    bool income = 4;
    TxHeader tx_header = 5;
}

message Transfer {
    string token = 1;
    string sender = 2;
    string receiver = 3;
    string value = 4;
    TxHeader tx_header = 5;
}

message Approve {
    string owner = 1;
    string spender = 2;
    string value = 3;
    TxHeader tx_header = 4;
}

message WethDeposit {
    string owner = 1;
    string value = 2;
    TxHeader tx_header = 3;
}

message WethWithdrawal {
    string owner = 1;
    string value = 2;
    TxHeader tx_header = 3;
}

// 来源于pending filter&&rpc raw transaction，都往ringMemPool发送
message RingDetectedInMemPoll {
    string ring_hash = 2;
    repeated string order_hash = 3;
    TxHeader tx_header = 4;
}

message OrderFilled {
    string ring_index = 1;
    string ring_hash = 2;
    string pre_order_hash = 3;
    string order_hash = 4;
    string next_order_hash = 5;
    string owner = 6;
    string token_s = 7;
    string token_b = 8;
    string amount_s = 9;
    string amount_b = 10;
    string lrc_reward = 11;
    string lrc_fee = 12;
    string split_s = 13;
    string split_b = 14;
    int32 fill_index = 15;
    TxHeader tx_header = 16;
}

message SubmitRing {
    Ring ring = 1;
    TxHeader tx_header = 2;
}

message RingMined {
    repeated OrderFilled fills = 2;
    TxHeader tx_header = 3;
}

message CancelOrder {
    RawOrder order = 1;
    string cancel_amount = 2;
    TxHeader tx_header = 3;
}

message OrderCancelled {
    string order_hash = 1;
    string amount = 2;
    TxHeader tx_header = 3;
}

message Cutoff {
    string owner = 1;
    int32 cutoff = 2;
    TxHeader tx_header = 3;
}

message CutoffPair {
    string owner = 1;
    string token1 = 2;
    string token2 = 3;
    int32 cutoff = 4;
    TxHeader tx_header = 5;
}

message ChainRolledBack {
    bytes detected_block_number = 1;
    bytes delected_block_hash = 2;
    bytes fork_block_number = 3;
    bytes fork_block_hash = 4;
    bool fork = 5;
}

message HeartBeat {
    bytes block_number = 1;
}
